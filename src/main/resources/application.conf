benchmark {
  role: ${?ROLE}
  server {
    host: localhost
    port: 9000
    parallelism: 64
  }
}

akka {
  actor {
    provider = akka.cluster.ClusterActorRefProvider
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      bindhostname = "127.0.0.1"
      port = 0
      port = ${?AKKA_PORT}
    }
  }
  extensions += "akka.cluster.ddata.DistributedData"
  extensions += "akka.cluster.client.ClusterClientReceptionist"
  cluster {
    seed-nodes = [
      "akka.tcp://benchmark@127.0.0.1:2551"
    ]
    client {
      initial-contacts = [
        "akka.tcp://benchmark@127.0.0.1:2551/system/receptionist"
      ]
      receptionist {
      }
    }
    roles: [${?ROLE}]
    allow-weakly-up-members = on
    metrics.enabled = off
    distributed-data.durable.lmdb.dir = "/tmp/ddata"
    sharding {
      state-store-mode = ddata
      distributed-data.durable.lmdb.dir = ${akka.cluster.distributed-data.durable.lmdb.dir}
      role = "worker"
    }
    auto-down-unreachable-after = 3s
  }
}